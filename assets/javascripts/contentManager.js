// Generated by CoffeeScript 1.3.3
(function() {
  var ContentManager,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  ContentManager = (function() {

    ContentManager.prototype.manifest = [
      {
        src: 'images/Background02.png',
        id: 'background'
      }, {
        src: 'images/BlueShip.png',
        id: 'ship'
      }, {
        src: 'images/WalkingSquare.png',
        id: 'square'
      }
    ];

    function ContentManager(stage, width, height, downloadCompleteCallback) {
      this.stage = stage;
      this.downloadCompleteCallback = downloadCompleteCallback;
      this.tick = __bind(this.tick, this);

      this.handleElementLoad = __bind(this.handleElementLoad, this);

      this.handleElementError = __bind(this.handleElementError, this);

      this.preload = new createjs.PreloadJS(false);
      this.preload.onError = this.handleElementError;
      this.preload.onFileLoad = this.handleElementLoad;
      this.downloadProgress = new createjs.Text("-- %", "bold 18px Arial", "#fff");
      this.downloadProgress.x = width / 2;
      this.downloadProgress.y = height / 2;
      this.elementLoadedCount = 0;
    }

    ContentManager.prototype.startDownload = function() {
      this.preload.loadManifest(this.manifest);
      this.stage.addChild(this.downloadProgress);
      createjs.Ticker.addListener(this);
      return createjs.Ticker.setInterval(50);
    };

    ContentManager.prototype.handleElementError = function(e) {
      return alert("画像読み込み失敗 : " + e.src);
    };

    ContentManager.prototype.handleElementLoad = function(e) {
      this[e.id] = e.result;
      this.elementLoadedCount += 1;
      if (this.elementLoadedCount === this.manifest.length) {
        this.stage.removeChild(this.downloadProgress);
        createjs.Ticker.removeListener(this);
        return this.downloadCompleteCallback();
      }
    };

    ContentManager.prototype.tick = function() {
      this.downloadProgress.text = Math.round((this.elementLoadedCount / this.manifest.length) * 100) + " %";
      return this.stage.update();
    };

    return ContentManager;

  })();

  window.ContentManager = ContentManager;

}).call(this);
